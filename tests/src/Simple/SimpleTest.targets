<Project ToolsVersion="14.0" DefaultTargets="LinkNative" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />

  <PropertyGroup>
    <OutputType Condition="'$(OutputType)' == ''">Exe</OutputType>
    <OutputPath>$(MSBuildProjectDirectory)\bin\$(Configuration)\$(Platform)\</OutputPath>
    <IntermediateOutputPath>$(MSBuildProjectDirectory)\obj\$(Configuration)\$(Platform)\</IntermediateOutputPath>
  </PropertyGroup>

  <PropertyGroup>
    <ProjectJson>$(MSBuildThisFileDirectory)\project.json</ProjectJson>
    <ProjectLockJson>$(MSBuildThisFileDirectory)\project.lock.json</ProjectLockJson>
    <CopyNuGetImplementations>false</CopyNuGetImplementations>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <NuGetTargetMoniker>.NETStandard,Version=v1.6</NuGetTargetMoniker>
  </PropertyGroup>

  <!--
    When building a library as a reference, the returned build outputs include both the 
    IL assembly produced by CSC and the native obj produced by Ilc. Separate the native
    object file here so it isn't passed to CSC, and instead redirect it to be picked up
    by the LinkNative target.
  -->
  <Target Name="RemoveObjFiles" AfterTargets="ResolveProjectReferences" Condition="'$(IlcMultiModule)' == 'true'">
    <ItemGroup>
        <ObjFiles Include="@(_ResolvedProjectReferencePaths)" Condition="'%(Extension)' == '.obj'" />
        <LinkerArg Include="@(_ResolvedProjectReferencePaths)" Condition="'%(Extension)' == '.obj'" />
        <IlcReference Include="@(_ResolvedProjectReferencePaths)" Condition="'%(Extension)' == '.dll'" />
        <_ResolvedProjectReferencePaths Remove="@(ObjFiles)" />
    </ItemGroup>
  </Target>
  
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />

  <!-- Use the source primary copy for development convenience -->
  <Import Project="$(MSBuildThisFileDirectory)\..\..\Test.Common.targets" />

  <ItemGroup>
    <CustomLinkerArg Include="$(AdditionalLinkerFlags)" />
  </ItemGroup>

  <ItemGroup>
    <IlsArg Include="--targetarch=$(Platform)" />
  </ItemGroup>

</Project>
