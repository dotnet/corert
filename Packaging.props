<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreReleaseLabel>alpha</PreReleaseLabel>
    <PackageDescriptionFile>$(ProjectDir)src/pkg/descriptions.json</PackageDescriptionFile>
    <PackageLicenseFile>$(ProjectDir)src/pkg/dotnet_library_license.txt</PackageLicenseFile>
    <PackageThirdPartyNoticesFile>$(ProjectDir)src/pkg/ThirdPartyNotices.txt</PackageThirdPartyNoticesFile>
    <ReleaseNotes>TODO</ReleaseNotes>
    <ProjectUrl>https://dot.net</ProjectUrl>
    <!-- Add a condition for this when we are able to run on .NET Core -->
    <PackagingTaskDir>$(ToolsDir)net45/</PackagingTaskDir>
    <!-- defined in buildtools packaging.targets, but we need this before targets are imported -->
    <PackagePlatform Condition="'$(PackagePlatform)' == ''">$(Platform)</PackagePlatform>
    <PackagePlatform Condition="'$(PackagePlatform)' == 'amd64'">x64</PackagePlatform>
    <NativePackagePath>$(MSBuildThisFileDirectory)src/Native/pkg</NativePackagePath>
    <!-- We're currently not building a "live" baseline, instead we're using .NETCore 1.0 RTM stable versions as the baseline -->
    <SkipBaseLineCheck>true</SkipBaseLineCheck>
    <LineupPackageId>Microsoft.DotNet.CoreRT.Targets</LineupPackageId>
    <LineupPackageVersion Condition="'$(LineupPackageVersion)' == ''">1.0.0</LineupPackageVersion>

    <!-- by default all packages will use the same version which revs with respect to product version -->
    <PackageVersion Condition="'$(PackageVersion)' == ''">1.0.0</PackageVersion>
    <SkipValidatePackageTargetFramework>true</SkipValidatePackageTargetFramework>
  </PropertyGroup>

  <Import Condition="Exists('pkg/baseline/baseline.props') AND '$(MSBuildProjectExtension)' == '.pkgproj'" Project="pkg/baseline/baseline.props" />

  <ItemGroup>
    <PackageIndex Include="$(MSBuildThisFileDirectory)src/pkg/packageIndex.json" />
  </ItemGroup>

    <!--
      Building packages fails for two reasons.
      First, nuget doesn't like the paths in the nuspec having backslashes as directory separators.
      Second, we aren't yet building pdbs, which the nuspecs specify.
  <PropertyGroup Condition="'$(OsEnvironment)'=='Unix'">
    <SkipBuildPackages>true</SkipBuildPackages>
  </PropertyGroup>
    -->

  <ItemGroup Condition="'$(MSBuildProjectExtension)' == '.pkgproj'">
    <!-- Add required legal files to packages -->
    <File Condition="'$(PackageIsEmpty)' != 'true' AND Exists('$(PackageLicenseFile)')"
          Include="$(PackageLicenseFile)" >
        <SkipPackageFileCheck>true</SkipPackageFileCheck>
    </File>
    <File Condition="'$(PackageIsEmpty)' != 'true' AND Exists('$(PackageThirdPartyNoticesFile)')"
          Include="$(PackageThirdPartyNoticesFile)" >
        <SkipPackageFileCheck>true</SkipPackageFileCheck>
    </File>

    <!-- Add version file to packages -->
    <File Condition="'$(PackageIsEmpty)' != 'true' AND Exists('$(SyncInfoFile)')"
          Include="$(SyncInfoFile)" >
        <SkipPackageFileCheck>true</SkipPackageFileCheck>
    </File>
  </ItemGroup>
</Project>
