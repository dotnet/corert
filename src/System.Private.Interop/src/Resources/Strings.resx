<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Arg_InvalidANSIString" xml:space="preserve">
    <value>The ANSI string passed in could not be converted from the default ANSI code page to Unicode.</value>
  </data>
  <data name="Arg_InvalidComObjectException" xml:space="preserve">
    <value>Attempt has been made to use a COM object that does not have a backing class factory.</value>
  </data>
  <data name="Arg_InvalidHandle" xml:space="preserve">
    <value>Invalid handle.</value>
  </data>
  <data name="Arg_InvalidOleVariantTypeException" xml:space="preserve">
    <value>Specified OLE variant was invalid.</value>
  </data>
  <data name="Arg_VariantTypeNotSupported" xml:space="preserve">
    <value>Marshal for the specified variant type {0} not supported.</value>
  </data>
  <data name="Arg_InvalidThreshold" xml:space="preserve">
    <value>maximumThreshold cannot be less than initialThreshold.</value>
  </data>
  <data name="Arg_MustBeDecimal" xml:space="preserve">
    <value>Object must be of type Decimal.</value>
  </data>
  <data name="Arg_MustBeInt32" xml:space="preserve">
    <value>Object must be of type Int32.</value>
  </data>
  <data name="Arg_MustBeStringPtrNotAtom" xml:space="preserve">
    <value>The pointer passed in as a String must not be in the bottom 64K of the process's address space.</value>
  </data>
  <data name="Arg_NeedNonNegNumRequired" xml:space="preserve">
    <value>Non-negative number required.</value>
  </data>
  <data name="Arg_NotIsomorphic" xml:space="preserve">
    <value>Object contains non-primitive or non-blittable data.</value>
  </data>
  <data name="Arg_SafeArrayRankMismatchException" xml:space="preserve">
    <value>Specified array was not of the expected rank.</value>
  </data>
  <data name="Arg_SafeArrayTypeMismatchException" xml:space="preserve">
    <value>Specified array was not of the expected type.</value>
  </data>
  <data name="Arg_SizeOfNoTypeSizeInfo" xml:space="preserve">
    <value>Marshal.SizeOf may only be used with blittable types and types used in the generic SizeOf&lt;T&gt; overload methods.</value>
  </data>
  <data name="Arg_SizeOfNonValueType" xml:space="preserve">
    <value>Marshal.SizeOf may only be used with value types.</value>
  </data>
  <data name="Argument_AddingDuplicate" xml:space="preserve">
    <value>An item with the same key has already been added.</value>
  </data>
  <data name="Argument_NeedNonGenericType" xml:space="preserve">
    <value>The specified Type must not be a generic type definition.</value>
  </data>
  <data name="Argument_ObjNotComObject" xml:space="preserve">
    <value>The object's type must be __ComObject or derived from __ComObject.</value>
  </data>
  <data name="ArgumentNull_Buffer" xml:space="preserve">
    <value>Buffer cannot be null.</value>
  </data>
  <data name="ArgumentOutOfRange_NeedNonNegNum" xml:space="preserve">
    <value>Non-negative number required.</value>
  </data>
  <data name="Null_HString" xml:space="preserve">
    <value>Null strings may not be marshaled in Windows Runtime arguments.</value>
  </data>
  <data name="BadMarshalField_Null_HString" xml:space="preserve">
    <value>Null strings may not be marshaled in Windows Runtime fields.</value>
  </data>
  <data name="ArrayWithOffsetOverflow" xml:space="preserve">
    <value>ArrayWithOffset: offset exceeds array size.</value>
  </data>
  <data name="InvalidOperation_HCCountOverflow" xml:space="preserve">
    <value>Handle collector count overflows or underflows.</value>
  </data>
  <data name="StructArrayTooLarge" xml:space="preserve">
    <value>Array size exceeds addressing limitations.</value>
  </data>
  <data name="CustomPropertyProvider_DataBindingError" xml:space="preserve">
    <value>Failed to bind to property '{0}'.  {1}</value>
  </data>
  <data name="CustomPropertyProvider_MissingMetadata" xml:space="preserve">
    <value>Failed to bind to property '{0}'.  {1}</value>
  </data>
  <data name="Arg_GetMethNotFnd" xml:space="preserve">
    <value>Property Get method not found.</value>
  </data>
  <data name="Arg_SetMethNotFnd" xml:space="preserve">
    <value>Property Set method not found.</value>
  </data>
  <data name="Arg_MethodAccessException_WithMethodName" xml:space="preserve">
    <value>Attempt to access the method '{0}' on type '{1}' failed.</value>
  </data>
  <data name="Arg_RemovedTypeInstantiated" xml:space="preserve">
    <value>A type that was removed by MCG dependency reduction has been instantiated.</value>
  </data>
  <data name="Arg_NotImplementedInNonCoreApiSet" xml:space="preserve">
    <value>{0} is not implemented for non-CORE_API_SET builds.</value>
  </data>
  <data name="Arg_DelegateTypeNotRecognized" xml:space="preserve">
    <value>Delegate type is not recognized.</value>
  </data>
  <data name="Arg_NoMarshalCreatedObjectUsedOutOfTreadContext" xml:space="preserve">
    <value>The Windows Runtime Object can only be used in the threading context where it was created, because it implements INoMarshal or has MarshalingBehaviorAttribute(MarshalingType.None) set.</value>
  </data>
  <data name="Arg_UnexpectedTypeKind" xml:space="preserve">
    <value>Unexpected TypeKind.</value>
  </data>
  <data name="Arg_UnrecognizedTypeName" xml:space="preserve">
    <value>Unrecognized type name.</value>
  </data>
  <data name="Arg_InvalidCustomTypeNameValue" xml:space="preserve">
    <value>Invalid custom TypeName value.</value>
  </data>
  <data name="Argument_MustHaveLayoutOrBeBlittable" xml:space="preserve">
    <value>The specified structure '{0}' must be blittable or have layout information.</value>
  </data>
  <data name="TypeNameMarshalling_MissingMetadata" xml:space="preserve">
    <value>Failed to marshal System.Type instance using metadata information. {0}</value>
  </data>
  <data name="Excep_EnumNotStarted" xml:space="preserve">
    <value>Enum Not Started</value>
  </data>
  <data name="Excep_EnumEnded" xml:space="preserve">
    <value>Enum ended</value>
  </data>
  <data name="Excep_EnumFailedVersion" xml:space="preserve">
    <value>Collection was modified; enumeration operation may not execute.</value>
  </data>
  <data name="Excep_NotSupported" xml:space="preserve">
    <value>Not supported exception.</value>
  </data>
  <data name="Excep_CollectionBackingListTooLarge" xml:space="preserve">
    <value>Collection backing list too large</value>
  </data>
  <data name="Excep_KeyNotFound" xml:space="preserve">
    <value>The given key was not present in the dictionary.</value>
  </data>
  <data name="Excep_KeyCollectionSet" xml:space="preserve">
    <value>Key collection set.</value>
  </data>
  <data name="Excep_ValueCollectionSet" xml:space="preserve">
    <value>Value collection set.</value>
  </data>
  <data name="Excep_InsufficientSpaceToCopyCollection" xml:space="preserve">
    <value>Insufficient space to copy collection.</value>
  </data>
  <data name="Excep_IndexOutOfArrayBounds" xml:space="preserve">
    <value>Index out of array bounds.</value>
  </data>
  <data name="Excep_CannotRemoveFromEmptyCollection" xml:space="preserve">
    <value>Cannot remove from empty collection.</value>
  </data>
  <data name="Excep_IndexLargerThanMaxValue" xml:space="preserve">
    <value>Index larger than max value.</value>
  </data>
  <data name="Excep_IndexOutOfRange" xml:space="preserve">
    <value>The specified index is outside the current index range of this collection.</value>
  </data>
  <data name="Excep_AddingDuplicate" xml:space="preserve">
    <value>Adding duplicate.</value>
  </data>
  <data name="Excep_FromHResult" xml:space="preserve">
    <value>Exception from HRESULT:</value>
  </data>
  <data name="Excep_InvalidMarshalAs_Param" xml:space="preserve">
    <value>Incompatible MarshalAs detected in parameter named '{0}'. Please refer to MCG's warning message for more information.</value>
  </data>
  <data name="Excep_InvalidMarshalAs_Field" xml:space="preserve">
    <value>Incompatible MarshalAs detected in field named '{0}'. Please refer to MCG's warning message for more information.</value>
  </data>
  <data name="Excep_InvalidMarshalAs_Return" xml:space="preserve">
    <value>Incompatible MarshalAs detected in return value. Please refer to MCG's warning message for more information.</value>
  </data>
  <data name="Excep_InvalidComObject_NoRCW_Wrapper" xml:space="preserve">
    <value>COM object that has been separated from its underlying RCW cannot be used.</value>
  </data>
  <data name="StructMarshalling_MissingInteropData" xml:space="preserve">
    <value>{0} is missing structure marshalling data. To enable structure marshalling data, add a MarshalStructure directive to the application rd.xml file. For more information, please visit http://go.microsoft.com/fwlink/?LinkID=393965</value>
  </data>
  <data name="DelegateMarshalling_MissingInteropData" xml:space="preserve">
    <value>{0} is missing delegate marshalling data. To enable delegate marshalling data, add a MarshalDelegate directive to the application rd.xml file. For more information, please visit http://go.microsoft.com/fwlink/?LinkID=393965</value>
  </data>
  <data name="ComTypeMarshalling_MissingInteropData" xml:space="preserve">
    <value>{0} is missing interop type marshalling data. To enable interop type marshalling data, add a MarshalObject directive to the application rd.xml file. For more information, please visit http://go.microsoft.com/fwlink/?LinkID=393965</value>
  </data>
  <data name="Not_Enough_Thunks" xml:space="preserve">
    <value>The maximum number of live delegates have been marshaled to function pointers. More aggressively freeing delegate instances that have been marshaled may resolve this problem. Please notify Microsoft that you have encountered this error.</value>
  </data>
  <data name="Arg_NativeToManagedCall" xml:space="preserve">
    <value>Function has a parameter or return value of SafeHandle. Marshalling between a Windows HANDLE and .NET SafeHandle is not supported when a method is called from native code.</value>
  </data>
  <data name="Arg_NeedsDefaultCtor" xml:space="preserve">
    <value>'{0}' does not have a default constructor. Subclasses of SafeHandle must have a default constructor to support marshaling a Windows HANDLE into managed code.</value>
  </data>
  <data name="Arg_OutSafeHandleAsFieldNotSupported" xml:space="preserve">
    <value>Marshalling a Windows HANDLE to .NET SafeHandle within a structure field is not currently supported.</value>
  </data>
  <data name="PropertyValue_InvalidCoersion" xml:space="preserve">
    <value>Object in an IPropertyValue is of type '{0}' with value '{1}', which cannot be converted to a '{2}'.</value>
  </data>
  <data name="PropertyValue_InvalidCast" xml:space="preserve">
    <value>Object in an IPropertyValue is of type '{0}', which cannot be converted to a '{1}'.</value>
  </data>
  <data name="Arg_MustBeDelegateType" xml:space="preserve">
    <value>Type must derive from Delegate.</value>
  </data>
  <data name="Arg_CriticalHandleCannotBeAbstract" xml:space="preserve">
    <value>'{0}' is abstract. CriticalHandle types must not be abstract to support marshaling CriticalHandles into managed code.</value>
  </data>
  <data name="Arg_CriticalHandleMustHaveDefaultCtor" xml:space="preserve">
    <value>'{0}' does not have a default constructor. CriticalHandle types must have a default constructor to support marshaling CriticalHandles into managed code.</value>
  </data>
  <data name="Arg_CriticalHandleReverse" xml:space="preserve">
    <value>CriticalHandle types cannot be used in signatures of methods called from native code.</value>
  </data>
  <data name="Arg_OutCriticalHandleAsFieldNotSupported" xml:space="preserve">
    <value>Marshalling a Windows HANDLE to .NET CriticalHandle within a structure field is not currently supported.</value>
  </data>
  <data name="Argument_OffsetOfFieldNotFound" xml:space="preserve">
    <value>Field passed in is not a marshaled member of the type '{0}'.</value>
  </data>
  <data name="Argument_StructMustNotBeValueClass" xml:space="preserve">
    <value>The structure must not be a value class.</value>
  </data>
  <data name="Argument_NeedNonGenericObject" xml:space="preserve">
    <value>The specified object must not be an instance of a generic type.</value>
  </data>
  <data name="InvalidCast_WinRT" xml:space="preserve">
    <value>Unable to cast object of type '{0}' to type '{1}'.</value>
  </data>
  <data name="InvalidCast_Com" xml:space="preserve">
    <value>Unable to cast COM object of type '{0}' to interface type '{1}'. This operation failed because the QueryInterface call on the COM component for the interface with IID '{2}' failed due to the following error: {3}.</value>
  </data>
  <data name="MissingMetadataType" xml:space="preserve">
    <value>Unknown (Missing metadata for type)</value>
  </data>
  <data name="DirectUI_Empty" xml:space="preserve">
    <value>Empty.</value>
  </data>
  <data name="PInvoke_GetProcAddress_NoName" xml:space="preserve">
    <value>A library name must be specified in a DllImport attribute applied to non-IJW methods.</value>
  </data>
  <data name="PInvoke_LoadLib" xml:space="preserve">
    <value>Unable to load DLL '{0}': {1}</value>
  </data>
  <data name="PInvoke_GetProcAddress" xml:space="preserve">
    <value>Unable to find an entry point named '{0}' in DLL '{1}'.</value>
  </data>
</root>
