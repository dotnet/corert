######################################
#                                    #
# !!!!!!!  W A R N I N G   !!!!!!!!! #
#                                    #
######################################
# The following APIs are required for interop with the VS Debugger
# Prior to making any changes to these APIs reach out to the VS Debugger team to make sure that you changes are not going
# to prevent the debugger from working.

# System.String
public extern string.String(char c, int count)
public extern string.String(char* value)
public extern string.String(char* value, int startIndex, int length)
public extern string.String(char[] value)
public extern string.String(char[] value, int startIndex, int length)
public string string.Substring(int startIndex)
public string string.Substring(int startIndex, int length)
public int string.IndexOf(char value)
public int string.IndexOf(char value, int startIndex)
public int string.IndexOf(char value, int startIndex, int count)
public int string.IndexOf(string value)
public int string.IndexOf(string value, int startIndex)
public int string.IndexOf(string value, int startIndex, int count)
public int string.IndexOf(string value, int startIndex, int count, System.StringComparison comparisonType)
public int string.IndexOf(string value, int startIndex, System.StringComparison comparisonType)
public int string.IndexOf(string value, System.StringComparison comparisonType)
public static string string.Concat(object arg0)
public static string string.Concat(object arg0, object arg1)
public static string string.Concat(object arg0, object arg1, object arg2)
public static string string.Concat(params object[] args)
public static string string.Concat(params string[] values)
public static string string.Concat(string str0, string str1)
public static string string.Concat(string str0, string str1, string str2)
public static string string.Concat(string str0, string str1, string str2, string str3)
public static string string.Concat(System.Collections.Generic.IEnumerable<string> values)
public static string string.Concat<T>(System.Collections.Generic.IEnumerable<T> values)

# System.Globalization.CompareInfo
public virtual System.Globalization.CompareInfo System.Globalization.CultureInfo.CompareInfo.get
public static System.Globalization.CultureInfo System.Globalization.CultureInfo.InvariantCulture.get
public static System.Globalization.DateTimeFormatInfo System.Globalization.DateTimeFormatInfo.CurrentInfo.get
public static System.Globalization.DateTimeFormatInfo System.Globalization.DateTimeFormatInfo.InvariantInfo.get
public static System.Globalization.NumberFormatInfo System.Globalization.NumberFormatInfo.CurrentInfo.get
public static System.Globalization.NumberFormatInfo System.Globalization.NumberFormatInfo.InvariantInfo.get

# System.Environment
public static int System.Environment.TickCount.get
public static int System.Environment.ProcessorCount.get

# System.Exception
public virtual string System.Exception.StackTrace.get

# System.Array
public int System.Array.Length.get
public static void System.Array.Copy(System.Array sourceArray, int sourceIndex, System.Array destinationArray, int destinationIndex, int length)
public static void System.Array.Copy(System.Array sourceArray, System.Array destinationArray, int length)

# System.Runtime.InteropServices
public static System.Runtime.InteropServices.GCHandle System.Runtime.InteropServices.GCHandle.Alloc(object value, System.Runtime.InteropServices.GCHandleType type)

# ByReference<T>
private static extern System.Runtime.CompilerServices.ByReference<T> System.Runtime.CompilerServices.ByReference<T>.AddRaw(System.Runtime.CompilerServices.ByReference<T> pointer, int rawOffset)
public static extern System.Runtime.CompilerServices.ByReference<T1> System.Runtime.CompilerServices.ByReference<T>.Cast<T1>(System.Runtime.CompilerServices.ByReference<T> pointer)
public static extern System.Runtime.CompilerServices.ByReference<T> System.Runtime.CompilerServices.ByReference<T>.FromRef(ref T pointer)
public static extern T System.Runtime.CompilerServices.ByReference<T>.Load(System.Runtime.CompilerServices.ByReference<T> pointer)
private static extern bool System.Runtime.CompilerServices.ByReference<T>.PointerEquals(System.Runtime.CompilerServices.ByReference<T> value1, System.Runtime.CompilerServices.ByReference<T> value2)
private static extern int System.Runtime.CompilerServices.ByReference<T>.SizeOfTUnsigned()
private static extern void System.Runtime.CompilerServices.ByReference<T>.Store(System.Runtime.CompilerServices.ByReference<T> pointer, T value)
private static extern System.Runtime.CompilerServices.ByReference<T> System.Runtime.CompilerServices.ByReference<T>.SubRaw(System.Runtime.CompilerServices.ByReference<T> pointer, int rawOffset)
public static extern System.UIntPtr System.Runtime.CompilerServices.ByReference<T>.ToPointer(System.Runtime.CompilerServices.ByReference<T> pointer)
private static extern int System.Runtime.CompilerServices.ByReference<T>.UncheckedMul(int a, int b)
public static System.Runtime.CompilerServices.ByReference<T> System.Runtime.CompilerServices.ByReference<T>.Add(System.Runtime.CompilerServices.ByReference<T> pointer, int offset)
public static T System.Runtime.CompilerServices.ByReference<T>.LoadAtIndex(System.Runtime.CompilerServices.ByReference<T> pointer, int index)
private static int System.Runtime.CompilerServices.ByReference<T>.SizeOfT()
internal static void System.Runtime.CompilerServices.ByReference<T>.StoreAtIndex(System.Runtime.CompilerServices.ByReference<T> pointer, int index, T value)

# System.SR
internal static string System.SR.GetResourceString(string resourceKey)
internal static string System.SR.GetResourceString(string resourceKey, string defaultString)

# System.Runtime.RuntimeImports
internal static extern double System.Runtime.RuntimeImports._copysign(double x, double y)
internal static extern void System.Runtime.RuntimeImports._ecvt_s(byte* buffer, int sizeInBytes, double value, int count, int* dec, int* sign)
internal static extern double System.Runtime.RuntimeImports.acos(double x)
internal static extern bool System.Runtime.RuntimeImports.AreTypesAssignable(System.EETypePtr pSourceType, System.EETypePtr pTargetType)
internal static extern bool System.Runtime.RuntimeImports.AreTypesEquivalent(System.EETypePtr pType1, System.EETypePtr pType2)
internal static extern double System.Runtime.RuntimeImports.asin(double x)
internal static extern double System.Runtime.RuntimeImports.atan(double x)
internal static extern double System.Runtime.RuntimeImports.atan2(double x, double y)
internal static extern double System.Runtime.RuntimeImports.ceil(double x)
internal static extern double System.Runtime.RuntimeImports.cos(double x)
internal static extern double System.Runtime.RuntimeImports.cosh(double x)
internal static extern double System.Runtime.RuntimeImports.exp(double x)
internal static extern double System.Runtime.RuntimeImports.floor(double x)
internal static extern double System.Runtime.RuntimeImports.fmod(double x, double y)
internal static extern object System.Runtime.RuntimeImports.IsInstanceOf(object obj, System.EETypePtr pTargetType)
internal static extern object System.Runtime.RuntimeImports.IsInstanceOfClass(object obj, System.EETypePtr pTargetType)
internal static extern object System.Runtime.RuntimeImports.IsInstanceOfInterface(object obj, System.EETypePtr pTargetType)
internal static extern double System.Runtime.RuntimeImports.log(double x)
internal static extern double System.Runtime.RuntimeImports.log10(double x)
internal static extern void System.Runtime.RuntimeImports.memmove(byte* dmem, byte* smem, int size)
internal static extern double System.Runtime.RuntimeImports.modf(double x, double* intptr)
internal static extern double System.Runtime.RuntimeImports.pow(double x, double y)
internal static extern System.IntPtr System.Runtime.RuntimeImports.RhAllocateMemory(int sizeInBytes)
internal static extern System.IntPtr System.Runtime.RuntimeImports.RhAllocateThunksFromTemplate(System.IntPtr moduleHandle, int templateRva, int templateSize)
internal static extern object System.Runtime.RuntimeImports.RhBox(System.EETypePtr pEEType, void* pData)
internal static extern void System.Runtime.RuntimeImports.RhBulkMoveWithWriteBarrier(byte* dmem, byte* smem, int size)
internal static extern void System.Runtime.RuntimeImports.RhCallDescrWorker(System.IntPtr callDescr)
internal static extern bool System.Runtime.RuntimeImports.RhCanUnloadModule(System.IntPtr hOsModule)
internal static extern void System.Runtime.RuntimeImports.RhCheckArrayStore(object array, object obj)
internal static extern void System.Runtime.RuntimeImports.RhCollect(int generation, System.InternalGCCollectionMode mode)
private static extern int System.Runtime.RuntimeImports.RhCompatibleReentrantWaitAny(int alertable, int timeout, int count, System.IntPtr* handles)
internal static extern bool System.Runtime.RuntimeImports.RhCreateGenericInstanceDescForType2(System.EETypePtr pEEType, int arity, int nonGcStaticDataSize, int nonGCStaticDataOffset, int gcStaticDataSize, int threadStaticsOffset, void* pGcStaticsDesc, void* pThreadStaticsDesc, int* pGenericVarianceFlags)
internal static extern void System.Runtime.RuntimeImports.RhEnableShutdownFinalization(uint timeout)
internal static extern bool System.Runtime.RuntimeImports.RhFindBlob(System.IntPtr hOsModule, uint blobId, byte** ppbBlob, uint* pcbBlob)
internal static extern System.IntPtr System.Runtime.RuntimeImports.RhFindMethodStartAddress(System.IntPtr codeAddr)
internal static extern System.IntPtr System.Runtime.RuntimeImports.RhGetCodeTarget(System.IntPtr pCode)
internal static extern ushort System.Runtime.RuntimeImports.RhGetComponentSize(System.EETypePtr pEEType)
internal static extern System.Runtime.RuntimeImports.RhCorElementType System.Runtime.RuntimeImports.RhGetCorElementType(System.EETypePtr pEEType)
internal static extern long System.Runtime.RuntimeImports.RhGetCurrentObjSize()
internal static extern int System.Runtime.RuntimeImports.RhGetCurrentThreadStackTrace(System.IntPtr[] outputBuffer)
internal static extern System.IntPtr System.Runtime.RuntimeImports.RhGetDispatchMapForType(System.EETypePtr pEEType)
internal static extern System.Runtime.RuntimeImports.RhEETypeClassification System.Runtime.RuntimeImports.RhGetEETypeClassification(System.EETypePtr pEEType)
internal static extern System.Runtime.RuntimeImports.RhEETypeClassification System.Runtime.RuntimeImports.RhGetEETypeClassification(System.IntPtr pEEType)
internal static extern uint System.Runtime.RuntimeImports.RhGetEETypeHash(System.EETypePtr pType)
internal static extern bool System.Runtime.RuntimeImports.RhGetExceptionsForCurrentThread(System.Exception[] outputArray, out int writtenCountOut)
internal static extern int System.Runtime.RuntimeImports.RhGetGcCollectionCount(int generation, bool getSpecialGCCount)
internal static extern int System.Runtime.RuntimeImports.RhGetGCDescSize(System.EETypePtr eeType)
internal static extern System.Runtime.GCLatencyMode System.Runtime.RuntimeImports.RhGetGcLatencyMode()
internal static extern long System.Runtime.RuntimeImports.RhGetGCNow()
internal static extern System.IntPtr System.Runtime.RuntimeImports.RhGetGcStaticFieldData(System.EETypePtr pEEType)
internal static extern long System.Runtime.RuntimeImports.RhGetGcTotalMemory()
internal static extern int System.Runtime.RuntimeImports.RhGetGeneration(object obj)
internal static extern System.EETypePtr System.Runtime.RuntimeImports.RhGetInterface(System.EETypePtr pEEType, uint index)
internal static extern long System.Runtime.RuntimeImports.RhGetLastGCDuration(int generation)
internal static extern long System.Runtime.RuntimeImports.RhGetLastGCStartTime(int generation)
internal static extern uint System.Runtime.RuntimeImports.RhGetLoadedModules(System.IntPtr[] resultArray)
internal static extern int System.Runtime.RuntimeImports.RhGetLohCompactionMode()
internal static extern int System.Runtime.RuntimeImports.RhGetMaxGcGeneration()
internal static extern int System.Runtime.RuntimeImports.RhGetModuleFileName(System.IntPtr moduleHandle, out char* moduleName)
internal static extern System.IntPtr System.Runtime.RuntimeImports.RhGetModuleFromEEType(System.IntPtr pEEType)
internal static extern System.IntPtr System.Runtime.RuntimeImports.RhGetModuleFromPointer(System.IntPtr pointerVal)
internal static extern System.EETypePtr System.Runtime.RuntimeImports.RhGetNonArrayBaseType(System.EETypePtr pEEType)
internal static extern System.IntPtr System.Runtime.RuntimeImports.RhGetNonGcStaticFieldData(System.EETypePtr pEEType)
internal static extern System.EETypePtr System.Runtime.RuntimeImports.RhGetNullableType(System.EETypePtr pEEType)
internal static extern uint System.Runtime.RuntimeImports.RhGetNumInterfaces(System.EETypePtr pEEType)
internal static extern System.EETypePtr System.Runtime.RuntimeImports.RhGetRelatedParameterType(System.EETypePtr pEEType)
internal static extern System.IntPtr System.Runtime.RuntimeImports.RhGetRuntimeHelperForType(System.EETypePtr pEEType, System.Runtime.RuntimeImports.RuntimeHelperKind kind)
internal static extern System.IntPtr System.Runtime.RuntimeImports.RhGetThreadLocalStorageForDynamicType(int index, int tlsStorageSize, int numTlsCells)
internal static extern byte* System.Runtime.RuntimeImports.RhGetThreadStaticFieldAddress(System.EETypePtr pEEType, System.IntPtr fieldCookie)
internal static extern System.IntPtr System.Runtime.RuntimeImports.RhGetUniversalTransitionThunk()
internal static extern uint System.Runtime.RuntimeImports.RhGetValueTypeSize(System.EETypePtr pEEType)
internal static extern System.IntPtr System.Runtime.RuntimeImports.RhHandleAlloc(object value, System.Runtime.InteropServices.GCHandleType type)
internal static extern System.IntPtr System.Runtime.RuntimeImports.RhHandleAllocDependent(object primary, object secondary)
internal static extern System.IntPtr System.Runtime.RuntimeImports.RhHandleAllocVariable(object value, uint type)
internal static extern uint System.Runtime.RuntimeImports.RhHandleCompareExchangeVariableType(System.IntPtr handle, uint oldType, uint newType)
internal static extern void System.Runtime.RuntimeImports.RhHandleFree(System.IntPtr handle)
internal static extern object System.Runtime.RuntimeImports.RhHandleGet(System.IntPtr handle)
internal static extern object System.Runtime.RuntimeImports.RhHandleGetDependent(System.IntPtr handle, out object secondary)
internal static extern uint System.Runtime.RuntimeImports.RhHandleGetVariableType(System.IntPtr handle)
internal static extern void System.Runtime.RuntimeImports.RhHandleSet(System.IntPtr handle, object value)
internal static extern void System.Runtime.RuntimeImports.RhHandleSetDependentSecondary(System.IntPtr handle, object secondary)
internal static extern void System.Runtime.RuntimeImports.RhHandleSetVariableType(System.IntPtr handle, uint type)
internal static extern bool System.Runtime.RuntimeImports.RhHasCctor(System.EETypePtr pEEType)
internal static extern bool System.Runtime.RuntimeImports.RhHasReferenceFields(System.EETypePtr pEEType)
internal static extern bool System.Runtime.RuntimeImports.RhHasShutdownStarted()
internal static extern bool System.Runtime.RuntimeImports.RhIsArray(System.EETypePtr pEEType)
internal static extern bool System.Runtime.RuntimeImports.RhIsDynamicType(System.EETypePtr pEEType)
internal static extern bool System.Runtime.RuntimeImports.RhIsInterface(System.EETypePtr pEEType)
internal static extern bool System.Runtime.RuntimeImports.RhIsNullable(System.EETypePtr pEEType)
internal static extern bool System.Runtime.RuntimeImports.RhIsPromoted(object obj)
internal static extern bool System.Runtime.RuntimeImports.RhIsServerGc()
internal static extern bool System.Runtime.RuntimeImports.RhIsString(System.EETypePtr pEEType)
internal static extern bool System.Runtime.RuntimeImports.RhIsValueType(System.EETypePtr pEEType)
internal static extern object System.Runtime.RuntimeImports.RhMemberwiseClone(object obj)
internal static extern System.Array System.Runtime.RuntimeImports.RhNewArray(System.EETypePtr pEEType, int length)
internal static extern string System.Runtime.RuntimeImports.RhNewArrayAsString(System.EETypePtr pEEType, int length)
internal static extern System.IntPtr System.Runtime.RuntimeImports.RhNewInterfaceDispatchCell(System.EETypePtr pEEType, int slotNumber)
internal static extern object System.Runtime.RuntimeImports.RhNewObject(System.EETypePtr pEEType)
internal static extern void System.Runtime.RuntimeImports.RhpEtwExceptionThrown(char* exceptionTypeName, char* exceptionMessage, System.IntPtr faultingIP, long hresult)
internal static extern void System.Runtime.RuntimeImports.RhpETWLogLiveCom(int eventType, System.IntPtr CCWHandle, System.IntPtr objectID, System.IntPtr typeRawValue, System.IntPtr IUnknown, System.IntPtr VTable, int comRefCount, int jupiterRefCount, int flags)
internal static extern bool System.Runtime.RuntimeImports.RhpETWShouldWalkCom()
internal static extern bool System.Runtime.RuntimeImports.RhRegisterGcCallout(System.Runtime.RuntimeImports.GcRestrictedCalloutKind eKind, System.IntPtr pCalloutMethod)
internal static extern bool System.Runtime.RuntimeImports.RhRegisterRefCountedHandleCallback(System.IntPtr pCalloutMethod, System.EETypePtr pTypeFilter)
internal static extern void System.Runtime.RuntimeImports.RhReRegisterForFinalize(object obj)
internal static extern System.IntPtr System.Runtime.RuntimeImports.RhResolveDispatch(object pObject, System.EETypePtr pInterfaceType, ushort slot)
internal static extern System.IntPtr System.Runtime.RuntimeImports.RhResolveDispatchOnType(System.EETypePtr instanceType, System.EETypePtr interfaceType, ushort slot)
internal static extern void* System.Runtime.RuntimeImports.RhSetErrorInfoBuffer(void* pNewBuffer)
internal static extern void System.Runtime.RuntimeImports.RhSetGcLatencyMode(System.Runtime.GCLatencyMode newLatencyMode)
internal static extern bool System.Runtime.RuntimeImports.RhSetGenericInstantiation(System.EETypePtr pEEType, System.EETypePtr pEETypeDef, int arity, System.EETypePtr* pInstantiation)
internal static extern void System.Runtime.RuntimeImports.RhSetInterface(System.EETypePtr pEEType, int index, System.EETypePtr pEETypeInterface)
internal static extern void System.Runtime.RuntimeImports.RhSetLohCompactionMode(int newLohCompactionMode)
internal static extern void System.Runtime.RuntimeImports.RhSpinWait(int iterations)
internal static extern void System.Runtime.RuntimeImports.RhSuppressFinalize(object obj)
internal static extern void System.Runtime.RuntimeImports.RhUnbox(object obj, void* pData, System.EETypePtr pUnboxToEEType)
internal static extern void System.Runtime.RuntimeImports.RhUnregisterGcCallout(System.Runtime.RuntimeImports.GcRestrictedCalloutKind eKind, System.IntPtr pCalloutMethod)
internal static extern void System.Runtime.RuntimeImports.RhUnregisterRefCountedHandleCallback(System.IntPtr pCalloutMethod, System.EETypePtr pTypeFilter)
private static extern void System.Runtime.RuntimeImports.RhWaitForPendingFinalizers(int allowReentrantWait)
internal static extern bool System.Runtime.RuntimeImports.RhYield()
internal static extern double System.Runtime.RuntimeImports.sin(double x)
internal static extern double System.Runtime.RuntimeImports.sinh(double x)
internal static extern double System.Runtime.RuntimeImports.sqrt(double x)
internal static extern double System.Runtime.RuntimeImports.tan(double x)
internal static extern double System.Runtime.RuntimeImports.tanh(double x)
internal static extern bool System.Runtime.RuntimeImports.TryArrayClear(System.Array array, int index, int length)
internal static extern bool System.Runtime.RuntimeImports.TryArrayCopy(System.Array sourceArray, int sourceIndex, System.Array destinationArray, int destinationIndex, int length)
internal static System.Runtime.RuntimeImports.RhCorElementTypeInfo System.Runtime.RuntimeImports.GetRhCorElementTypeInfo(System.Runtime.RuntimeImports.RhCorElementType elementType)
internal static int System.Runtime.RuntimeImports.RhCompatibleReentrantWaitAny(bool alertable, int timeout, int count, System.IntPtr* handles)
internal static void System.Runtime.RuntimeImports.RhWaitForPendingFinalizers(bool allowReentrantWait)
public static extern void System.Runtime.CompilerServices.RuntimeHelpers.InitializeArray(System.Array array, System.RuntimeFieldHandle fldHandle)
internal static extern T System.Runtime.CompilerServices.RuntimeHelpers.UncheckedCast<T>(object value)

# System.Runtime.CompilerServices.RuntimeHelpers
public static void System.Runtime.CompilerServices.RuntimeHelpers.EnsureSufficientExecutionStack()
public static int System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode(object o)
private static uint System.Runtime.CompilerServices.RuntimeHelpers.GetNewHashCode()
public static object System.Runtime.CompilerServices.RuntimeHelpers.GetObjectValue(object obj)
private static byte* System.Runtime.CompilerServices.RuntimeHelpers.GetSufficientStackLimit()
private static int System.Runtime.CompilerServices.RuntimeHelpers.MakeHashCode(object o, uint* pSyncBlockIndex)
public static int System.Runtime.CompilerServices.RuntimeHelpers.OffsetToStringData.get
public static void System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(System.RuntimeTypeHandle type)

# System.IntPtr
public extern System.IntPtr.IntPtr(int value)
public extern System.IntPtr.IntPtr(long value)
public extern System.IntPtr.IntPtr(void* value)
public override bool System.IntPtr.Equals(object obj)
public override int System.IntPtr.GetHashCode()
public override string System.IntPtr.ToString()
public static System.IntPtr System.IntPtr.Add(System.IntPtr pointer, int offset)
public static System.IntPtr.explicit operator int(System.IntPtr value)
public static System.IntPtr.explicit operator long(System.IntPtr value)
public static System.IntPtr.explicit operator System.IntPtr(int value)
public static System.IntPtr.explicit operator System.IntPtr(long value)
public static System.IntPtr.explicit operator System.IntPtr(void* value)
public static System.IntPtr.explicit operator void*(System.IntPtr value)
public static bool System.IntPtr.operator !=(System.IntPtr value1, System.IntPtr value2)
public static System.IntPtr System.IntPtr.operator -(System.IntPtr pointer, int offset)
public static System.IntPtr System.IntPtr.operator +(System.IntPtr pointer, int offset)
public static bool System.IntPtr.operator ==(System.IntPtr value1, System.IntPtr value2)
public static int System.IntPtr.Size.get
public static System.IntPtr System.IntPtr.Subtract(System.IntPtr pointer, int offset)
internal bool System.IntPtr.IsNull()
public int System.IntPtr.ToInt32()
public long System.IntPtr.ToInt64()
public void* System.IntPtr.ToPointer()
public string System.IntPtr.ToString(string format)
