<?xml version="1.0" encoding="utf-8"?>
<!--
***********************************************************************************************
Microsoft.NETCore.Native.targets

WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have
          created a backup copy.  Incorrect changes to this file will make it
          impossible to load or build your projects from the command-line or the IDE.

This file defines the steps in the build process for native AOT compilation.

Licensed to the .NET Foundation under one or more agreements.
The .NET Foundation licenses this file to you under the MIT license.
See the LICENSE file in the project root for more information.
***********************************************************************************************
-->
<Project ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- Set defaults for unspecified properties -->
  <PropertyGroup>
    <NativeIntermediateOutputPath Condition="'$(NativeIntermediateOutputPath)' == ''">$(IntermediateOutputPath)native\</NativeIntermediateOutputPath>
    <NativeOutputPath Condition="'$(NativeOutputPath)' == ''">$(OutputPath)native\</NativeOutputPath>
    <!-- Workaround for lack of current host OS detection - https://github.com/Microsoft/msbuild/issues/539 -->
    <TargetOS Condition="'$(TargetOS)' == '' and '$(OS)' == 'Unix' and Exists('/Applications')">OSX</TargetOS>
    <TargetOS Condition="'$(TargetOS)' == ''">$(OS)</TargetOS>
  </PropertyGroup>

  <PropertyGroup>
    <NativeObjectExt Condition="'$(TargetOS)' == 'Windows_NT'">.obj</NativeObjectExt>
    <NativeObjectExt Condition="'$(TargetOS)' != 'Windows_NT'">.o</NativeObjectExt>

    <IlcOutputFileExt>$(NativeObjectExt)</IlcOutputFileExt>
    <IlcOutputFileExt Condition="$(NativeCodeGen) == 'cpp'">.cpp</IlcOutputFileExt>


    <NativeBinaryExt Condition="'$(OutputType)' ==  'Exe' and '$(TargetOS)' == 'Windows_NT'">.exe</NativeBinaryExt>
    <NativeBinaryExt Condition="'$(OutputType)' ==  'Exe' and '$(TargetOS)' != 'Windows_NT'"></NativeBinaryExt>
    <NativeBinaryExt Condition="'$(OutputType)' !=  'Exe' and '$(TargetOS)' == 'Windows_NT'">.dll</NativeBinaryExt>
    <NativeBinaryExt Condition="'$(OutputType)' !=  'Exe' and '$(TargetOS)' == 'OSX'">.dylib</NativeBinaryExt>
    <NativeBinaryExt Condition="'$(OutputType)' !=  'Exe' and '$(TargetOS)' != 'Windows_NT' and '$(TargetOS)' !=  'OSX'">.so</NativeBinaryExt>

    <NativeObject>$(NativeIntermediateOutputPath)$(TargetName)$(NativeObjectExt)</NativeObject>
    <NativeBinary>$(NativeOutputPath)$(TargetName)$(NativeBinaryExt)</NativeBinary>

    <IlcCompileOutput Condition="$(NativeCodeGen) == ''">$(NativeObject)</IlcCompileOutput>
    <IlcCompileOutput Condition="$(NativeCodeGen) == 'cpp'">$(NativeIntermediateOutputPath)$(TargetName).cpp</IlcCompileOutput>
    <LinkNativeDependsOn Condition="$(NativeCodeGen) == ''">IlcCompile</LinkNativeDependsOn>
    <LinkNativeDependsOn Condition="$(NativeCodeGen) == 'cpp'">CppCompile</LinkNativeDependsOn>
  </PropertyGroup>

  <ItemGroup>
    <ManagedBinary Include="$(IntermediateOutputPath)$(TargetName)$(TargetExt)" />
  </ItemGroup>

  <ItemGroup>
    <IlcReference Include="$(IlcPath)\sdk\*.dll" />
    <IlcReference Include="$(IlcPath)\framework\*.dll" />
  </ItemGroup>

  <PropertyGroup>
    <IlcCompileDependsOn Condition="'$(IlcCompileDependsOn)'==''">Compile</IlcCompileDependsOn>
  </PropertyGroup>

  <Target Name="IlcFramework">
    <ItemGroup>
      <ManagedBinary Include="@(IlcReference)" />
    </ItemGroup>

  </Target>

  <Target Name="IlcCompile" 
      Inputs="@(ManagedBinary)"
      Outputs="$(NativeIntermediateOutputPath)%(Filename)$(IlcOutputFileExt)"
      DependsOnTargets="$(IlcCompileDependsOn)">

    <ItemGroup>
      <IlcArg Include="@(ManagedBinary)" />
      <IlcArg Include="-o:$(NativeIntermediateOutputPath)%(Filename)$(IlcOutputFileExt)" />
      <IlcArg Include="@(IlcReference->'-r:%(Identity)')" />
      <IlcArg Condition="$(NativeCodeGen) != ''" Include="--$(NativeCodeGen)" />
      <IlcArg Condition="$(IlcMultiModule) == 'true'" Include="--multifile" />
      <IlcArg Condition="$(Optimize) == 'true'" Include="-O" />
      <IlcArg Condition="$(DebugSymbols) == 'true'" Include="-g" />
    </ItemGroup>

    <MakeDir Directories="$(NativeIntermediateOutputPath)" />
    <WriteLinesToFile File="$(NativeIntermediateOutputPath)%(ManagedBinary.Filename).ilc.rsp" Lines="@(IlcArg)" Overwrite="true" />

    <MakeDir Directories="$([System.IO.Path]::GetDirectoryName($(NativeObject)))" />

    <PropertyGroup>
      <TestHost Condition="'$(OS)' == 'Windows_NT'">CoreRun.exe</TestHost>
      <TestHost Condition="'$(OS)' != 'Windows_NT'">corerun</TestHost>
    </PropertyGroup>

    <Exec Command="&quot;$(IlcPath)\$(TestHost)&quot; &quot;$(IlcPath)\ilc.dll&quot; @&quot;$(NativeIntermediateOutputPath)%(ManagedBinary.Filename).ilc.rsp&quot;">
    </Exec>

  </Target>

  <Import Project="Microsoft.NETCore.Native.Windows.props" Condition="'$(TargetOS)' == 'Windows_NT'" />
  <Import Project="Microsoft.NETCore.Native.Unix.props" Condition="'$(TargetOS)' != 'Windows_NT'" />
  
  <Target Name="CppCompile"
      Inputs="$(IlcCompileOutput)"
      Outputs="$(NativeObject)"
      DependsOnTargets="IlcCompile">

    <ItemGroup>
      <CompilerArg Include="$(IlcCompileOutput)" />
      <CompilerArg Include="/Fo$(NativeObject)" Condition="'$(OS)' == 'Windows_NT'" />
      <CompilerArg Include="-o $(NativeObject)" Condition="'$(OS)' != 'Windows_NT'" />
      <CompilerArg Include="@(CppCompilerAndLinkerArg)" />
    </ItemGroup>

    <MakeDir Directories="$(NativeIntermediateOutputPath)" />
    <Exec Command="$(CppCompiler) @(CompilerArg, ' ')" Condition="'$(OS)' != 'Windows_NT'" />
    <WriteLinesToFile File="$(NativeIntermediateOutputPath)cl.rsp" Lines="@(CompilerArg)" Overwrite="true"  Condition="'$(OS)' == 'Windows_NT'"/>
    <Exec Command="$(CppCompiler) @&quot;$(NativeIntermediateOutputPath)cl.rsp&quot;" Condition="'$(OS)' == 'Windows_NT'" />
  </Target>

  <Target Name="LinkNative"
      Inputs="$(NativeObject)"
      Outputs="$(NativeBinary)"
      DependsOnTargets="$(LinkNativeDependsOn)">

    <ItemGroup>
      <CustomLinkerArg Include="$(NativeObject)" />
      <CustomLinkerArg Include="-o $(NativeBinary)" Condition="'$(OS)' != 'Windows_NT'" />
      <CustomLinkerArg Include="/OUT:$(NativeBinary)" Condition="'$(OS)' == 'Windows_NT'" />
      <CustomLinkerArg Include="@(LinkerArg)" />
    </ItemGroup>

    <MakeDir Directories="$([System.IO.Path]::GetDirectoryName($(NativeBinary)))" />
    <Exec Command="$(CppLinker) @(CustomLinkerArg, ' ')" Condition="'$(OS)' != 'Windows_NT'" />
    <WriteLinesToFile File="$(NativeIntermediateOutputPath)link.rsp" Lines="@(CustomLinkerArg)" Overwrite="true" Condition="'$(OS)' == 'Windows_NT'" />
    <Exec Command="$(CppLinker)  @&quot;$(NativeIntermediateOutputPath)link.rsp&quot;" Condition="'$(OS)' == 'Windows_NT'" />
  </Target>
</Project>
