<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
  <PropertyGroup>
    <OutputPath>$(BaseOutputPath)$(OSPlatformConfig)/tools</OutputPath>
  </PropertyGroup>
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <RootNamespace>ILCompiler</RootNamespace>
    <AssemblyName>ilc</AssemblyName>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <TargetFramework>netcoreapp2.1</TargetFramework>
    <CopyNugetImplementations>false</CopyNugetImplementations>
    <!-- Force .dll extension even if output type is exe. -->
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="$(ObjWriterBuild) == 'true'">
    <ObjWriterLibrary Condition="'$(OSGroup)' == 'Windows_NT'">objwriter.dll</ObjWriterLibrary>
    <ObjWriterLibrary Condition="'$(OSGroup)' == 'Linux'">libobjwriter.so</ObjWriterLibrary>
    <ObjWriterLibrary Condition="'$(OSGroup)' == 'OSX'">libobjwriter.dylib</ObjWriterLibrary>
  </PropertyGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\ILCompiler.DependencyAnalysisFramework\src\ILCompiler.DependencyAnalysisFramework.csproj" />
    <ProjectReference Include="..\..\ILCompiler.MetadataTransform\src\ILCompiler.MetadataTransform.csproj" />
    <ProjectReference Include="..\..\ILCompiler.MetadataWriter\src\ILCompiler.MetadataWriter.csproj" />
    <ProjectReference Include="..\..\ILCompiler.RyuJit\src\ILCompiler.RyuJit.csproj" />
    <ProjectReference Include="..\..\ILCompiler.TypeSystem\src\ILCompiler.TypeSystem.csproj" />
    <ProjectReference Include="..\..\ILCompiler.Compiler\src\ILCompiler.Compiler.csproj" />
    <ProjectReference Include="..\..\ILCompiler.CppCodeGen\src\ILCompiler.CppCodeGen.csproj" />
    <ProjectReference Include="..\..\ILCompiler.WebAssembly\src\ILCompiler.WebAssembly.csproj" />
    <ProjectReference Include="..\..\ILCompiler.ReadyToRun\src\ILCompiler.ReadyToRun.csproj" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="System.CommandLine">
      <Version>0.1.0-e160909-1</Version>
    </PackageReference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="ConfigurablePInvokePolicy.cs" />
    <Compile Include="Program.cs" />
    <Compile Include="RdXmlRootProvider.cs" />
    <Compile Include="EcmaOnlyDebugInformationProvider.cs" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\..\Common\src\CommandLine\CommandLineException.cs">
      <Link>CommandLine\CommandLineException.cs</Link>
    </Compile>
    <Compile Include="..\..\Common\src\CommandLine\CommandLineHelpers.cs">
      <Link>CommandLine\CommandLineHelpers.cs</Link>
    </Compile>
    <Compile Include="RemovingILProvider.cs" />
  </ItemGroup>
  <ItemGroup Condition="$(ObjWriterBuild) == 'true' and '$(OSGroup)' == 'Windows_NT'">
    <Content Include="$(ObjDir)Native\$(OSPlatformConfig)\ObjWriter\llvmCap\LLVM-prefix\src\LLVM-build\bin\$(ConfigurationGroup)\$(ObjWriterLibrary)">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <ItemGroup Condition="$(ObjWriterBuild) == 'true' and '$(OSGroup)' != 'Windows_NT'">
    <Content Include="$(ObjDir)Native\$(OSPlatformConfig)\ObjWriter\llvmCap\LLVM-prefix\src\LLVM-build\lib\$(ObjWriterLibrary)">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>  
  <ItemGroup>
    <Content Include="ilc.runtimeconfig.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
  <PropertyGroup>
    <RunCommand Condition="'$(OS)' == 'Windows_NT'">$(TargetDir)$(AssemblyName).exe</RunCommand>
    <RunCommand Condition="'$(OS)' != 'Windows_NT'">$(TargetDir)$(AssemblyName)</RunCommand>
    <RunArguments>$(StartArguments)</RunArguments>
  </PropertyGroup>
</Project>
