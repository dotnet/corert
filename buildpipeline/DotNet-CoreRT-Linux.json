{
  "build": [
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Delete files from $(Build.SourcesDirectory)",
      "timeoutInMinutes": 0,
      "task": {
        "id": "b7e8b412-0437-4065-9371-edc5881de25b",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "SourceFolder": "$(Build.SourcesDirectory)",
        "Contents": "**\n.gitignore"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "git clone",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "git",
        "arguments": "clone $(GitUrl) $(SourceFolder)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "git checkout",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "git",
        "arguments": "checkout $(SourceVersion)",
        "workingFolder": "$(SourceFolder)",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Initialize tools",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "$(Build.SourcesDirectory)/$(SourceFolder)/init-tools.sh",
        "arguments": "",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Docker cleanup",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "$(Build.SourcesDirectory)/$(SourceFolder)/Tools/scripts/docker/cleanup-docker.sh",
        "arguments": "",
        "workingFolder": "$(SourceFolder)",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "docker git clone",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run --name $(DockerContainerName) $(DockerImageName) git clone $(GitUrl) $(GitDirectory)",
        "workingFolder": "$(SourceFolder)",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Commit changes",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "commit $(DockerContainerName) $(DockerModifiedImageName)",
        "workingFolder": "$(SourceFolder)",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Remove container",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "rm $(DockerContainerName)",
        "workingFolder": "$(SourceFolder)",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Check out the specified commit",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run -w $(GitDirectory) --name $(DockerContainerName) $(DockerModifiedImageName) git checkout $(SourceVersion)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Commit changes",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "commit $(DockerContainerName) $(DockerModifiedImageName)",
        "workingFolder": "$(SourceFolder)",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Remove container",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "rm $(DockerContainerName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Run clean.sh",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run -w=\"$(GitDirectory)\" --name $(DockerContainerName) $(DockerModifiedImageName) $(GitDirectory)/buildscripts/clean.sh",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Commit changes",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "commit $(DockerContainerName) $(DockerModifiedImageName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Remove container",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "rm $(DockerContainerName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Run build-native.sh",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run -w=\"$(GitDirectory)\" --name $(DockerContainerName) $(DockerModifiedImageName) $(GitDirectory)/buildscripts/build-native.sh $(Platform) $(Configuration) -OfficialBuildId $(OfficialBuildId)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Commit changes",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "commit $(DockerContainerName) $(DockerModifiedImageName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Remove container",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "rm $(DockerContainerName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Run build-managed.sh",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run -w=\"$(GitDirectory)\" --name $(DockerContainerName) $(DockerModifiedImageName) $(GitDirectory)/buildscripts/build-managed.sh $(Platform) $(Configuration) -OfficialBuildId $(OfficialBuildId)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Commit changes",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "commit $(DockerContainerName) $(DockerModifiedImageName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Remove container",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "rm $(DockerContainerName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Run build-tests.sh",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run -w=\"$(GitDirectory)\" --name $(DockerContainerName) $(DockerModifiedImageName) $(GitDirectory)/buildscripts/build-tests.sh $(Platform) $(Configuration) -OfficialBuildId $(OfficialBuildId)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Commit changes",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "commit $(DockerContainerName) $(DockerModifiedImageName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Remove container",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "rm $(DockerContainerName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Run build-packages.sh",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run -w=\"$(GitDirectory)\" --name $(DockerContainerName) $(DockerModifiedImageName) $(GitDirectory)/buildscripts/build-packages.sh $(Platform) $(Configuration) -OfficialBuildId $(OfficialBuildId)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Commit changes",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "commit $(DockerContainerName) $(DockerModifiedImageName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Remove container",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "rm $(DockerContainerName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Publish packages",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run -w=\"$(GitDirectory)\" --name $(DockerContainerName) $(DockerModifiedImageName) $(GitDirectory)/buildscripts/publish-packages.sh -AzureAccount $(CloudDropAccountName) -AzureToken $(CloudDropAccessToken) -Container $(Label)",
        "workingFolder": "$(SourceFolder)",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Commit changes",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "commit $(DockerContainerName) $(DockerModifiedImageName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Remove old docker build logs",
      "timeoutInMinutes": 0,
      "task": {
        "id": "b7e8b412-0437-4065-9371-edc5881de25b",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "SourceFolder": "$(DockerCopyDest)",
        "Contents": "*"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Run mkdir",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "mkdir",
        "arguments": "$(DockerCopyDest)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": true,
      "displayName": "Expose docker repo for publishing",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "cp $(DockerContainerName):$(GitDirectory) $(DockerCopyDest)/",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Remove container",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "rm $(DockerContainerName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": true,
      "displayName": "Copy Publish Artifact: BuildLogs",
      "timeoutInMinutes": 0,
      "task": {
        "id": "1d341bb0-2106-458c-8422-d00bcea6512a",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "CopyRoot": "$(DockerCopyDest)/$(SourceFolder)",
        "Contents": "*.log\n**/*.log",
        "ArtifactName": "BuildLogs",
        "ArtifactType": "Container",
        "TargetPath": "\\\\my\\share\\$(Build.DefinitionName)\\$(Build.BuildNumber)"
      }
    },
    {
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": false,
      "displayName": "Compress the bin directory",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "tar",
        "arguments": "-zcvf $(DockerCopyDest)/bin.tar.gz bin",
        "workingFolder": "$(DockerCopyDest)/$(SourceFolder)",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": true,
      "displayName": "Run docker version",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "version",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": false,
      "displayName": "Copy Publish Artifact: bin",
      "timeoutInMinutes": 0,
      "task": {
        "id": "1d341bb0-2106-458c-8422-d00bcea6512a",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "CopyRoot": "$(DockerCopyDest)",
        "Contents": "bin.tar.gz",
        "ArtifactName": "bin",
        "ArtifactType": "Container",
        "TargetPath": "\\\\my\\share\\$(Build.DefinitionName)\\$(Build.BuildNumber)"
      }
    }
  ],
  "options": [
    {
      "enabled": false,
      "definition": {
        "id": "7c555368-ca64-4199-add6-9ebaf0b0137d"
      },
      "inputs": {
        "multipliers": "[]",
        "parallel": "false",
        "continueOnError": "true",
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "a9db38f9-9fdc-478c-b0f9-464221e58316"
      },
      "inputs": {
        "workItemType": "234347",
        "assignToRequestor": "true",
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "57578776-4c22-4526-aeb0-86b6da17ee9c"
      },
      "inputs": {
        "additionalFields": "{}"
      }
    }
  ],
  "variables": {
    "system.debug": {
      "value": "false",
      "allowOverride": true
    },
    "Platform": {
      "value": "x64",
      "allowOverride": true
    },
    "Configuration": {
      "value": "Release",
      "allowOverride": true
    },
    "SignType": {
      "value": "test",
      "allowOverride": true
    },
    "OfficialBuildId": {
      "value": "$(Build.BuildNumber)",
      "allowOverride": true
    },
    "BuildTag": {
      "value": "corert-alpha",
      "allowOverride": true
    },
    "Label": {
      "value": "$(BuildTag)-$(Build.BuildNumber)",
      "allowOverride": true
    },
    "SourceVersion": {
      "value": "HEAD",
      "allowOverride": true
    },
    "GitUrl": {
      "value": "https://github.com/dotnet/corert",
      "allowOverride": true
    },
    "SourceBranch": {
      "value": "master",
      "allowOverride": true
    },
    "Git": {
      "value": "git"
    },
    "GitDirectory": {
      "value": "/root/$(SourceFolder)"
    },
    "DockerContainerName": {
      "value": "$(Build.BuildId)"
    },
    "DockerModifiedImageName": {
      "value": "$(Build.BuildId)"
    },
    "DockerImageName": {
      "value": "$(DockerRepository):$(DockerTag)"
    },
    "DockerRepository": {
      "value": "microsoft/dotnet-buildtools-prereqs"
    },
    "DockerTag": {
      "value": "ubuntu-14.04-198573d-20170319080304"
    },
    "DockerCopyDest": {
      "value": "$(Build.BinariesDirectory)/docker_$(SourceFolder)"
    },
    "SourceFolder": {
      "value": "corert_$(Build.BuildId)",
      "allowOverride": false
    },
    "MyGetFeedUrl": {
      "value": "https://dotnet.myget.org/F/dotnet-core/api/v2/package"
    },
    "MyGetApiKey": {
      "value": null,
      "isSecret": true,
      "allowOverride": true
    },
    "CloudDropAccountName": {
      "value": "dotnetbuildoutput"
    },
    "CloudDropAccessToken": {
      "value": null,
      "isSecret": true
    },
    "UpdatePublishedVersions.AuthToken": {
      "value": null,
      "isSecret": true
    },
    "VersionsRepoOwner": {
      "value": "crummel",
      "allowOverride": true
    },
    "VersionsRepo": {
      "value": "dotnet_versions",
      "allowOverride": true
    }
  },
  "demands": [
    "Agent.OS -equals linux"
  ],
  "retentionRules": [
    {
      "branches": [
        "+refs/heads/*"
      ],
      "artifacts": [],
      "artifactTypesToDelete": [
        "FilePath",
        "SymbolStore"
      ],
      "daysToKeep": 10,
      "minimumToKeep": 1,
      "deleteBuildRecord": true,
      "deleteTestResults": true
    }
  ],
  "buildNumberFormat": "$(date:yyyyMMdd)$(rev:-rr)",
  "jobAuthorizationScope": "projectCollection",
  "jobTimeoutInMinutes": 60,
  "repository": {
    "properties": {
      "labelSources": "0",
      "reportBuildStatus": "true",
      "fetchDepth": "0",
      "gitLfsSupport": "false",
      "skipSyncSource": "false",
      "cleanOptions": "3"
    },
    "id": "0a2b2664-c1be-429c-9b40-8a24dee27a4a",
    "type": "TfsGit",
    "name": "DotNet-BuildPipeline",
    "url": "https://devdiv.visualstudio.com/DevDiv/_git/DotNet-BuildPipeline",
    "defaultBranch": "refs/heads/master",
    "clean": "true",
    "checkoutSubmodules": false
  },
  "quality": "definition",
  "defaultBranch": "refs/heads/master",
  "queue": {
    "pool": {
      "id": 39,
      "name": "DotNet-Build"
    },
    "id": 36,
    "name": "DotNet-Build"
  },
  "path": "\\",
  "type": "build",
  "id": 4510,
  "name": "DotNet-CoreRT-Linux",
  "url": "https://devdiv.visualstudio.com/DefaultCollection/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_apis/build/Definitions/4510",
  "project": {
    "id": "0bdbc590-a062-4c3f-b0f6-9383f67865ee",
    "name": "DevDiv",
    "description": "Visual Studio and DevDiv team project for git source code repositories.  Work items will be added for Adams, Dev14 work items are tracked in vstfdevdiv.  ",
    "url": "https://devdiv.visualstudio.com/DefaultCollection/_apis/projects/0bdbc590-a062-4c3f-b0f6-9383f67865ee",
    "state": "wellFormed",
    "revision": 418097423
  }
}
